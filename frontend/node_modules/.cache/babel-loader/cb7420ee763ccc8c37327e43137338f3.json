{"ast":null,"code":"var _jsxFileName = \"/home/trip/Desktop/gitless/frontend/src/components/NewTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport ButtonIcons from './ButtonIcons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewTaskForm(props) {\n  _s();\n\n  const [state, setState] = useState({\n    name: \"\",\n    date: \"\"\n  });\n  const show = useRef(null);\n  const focus = useRef(null);\n  let err = \"*Your task needs a name\";\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (state.name === \"\") {\n      show.current.style.display = \"inline-block\";\n      focus.current.focus();\n      return;\n    } else {\n      show.current.style.display = \"none\";\n    }\n\n    if (props.type === \"Priority\") {\n      props.addTask(state.name);\n    } else {\n      props.addTask(state.name, state.date);\n    }\n\n    state.name = \"\";\n    state.date = \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"newTaskForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"new-todo-input\",\n        className: \"inFields newTask\",\n        name: \"name\",\n        autoComplete: \"off\",\n        placeholder: \"New Task\",\n        value: state.name,\n        onChange: handleChange,\n        ref: focus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"buttonScheme\",\n        children: /*#__PURE__*/_jsxDEV(ButtonIcons, {\n          type: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: show,\n      className: \"errorMsg\",\n      style: {\n        display: \"none\",\n        color: \"red\"\n      },\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTaskForm, \"SwFgA3v2SV8PeQNIZ/LN9yPcG7k=\");\n\n_c = NewTaskForm;\nexport default NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/home/trip/Desktop/gitless/frontend/src/components/NewTaskForm.js"],"names":["React","useRef","useState","Button","Form","ButtonIcons","NewTaskForm","props","state","setState","name","date","show","focus","err","handleChange","e","target","value","handleSubmit","preventDefault","current","style","display","type","addTask","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EACA;AAAA;;AACI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAC9B;AACIQ,IAAAA,IAAI,EAAE,EADV;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAD8B,CAAlC;AAOA,QAAMC,IAAI,GAAGX,MAAM,CAAC,IAAD,CAAnB;AACA,QAAMY,KAAK,GAAGZ,MAAM,CAAC,IAAD,CAApB;AAEA,MAAIa,GAAG,GAAG,yBAAV;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IACrB;AACIP,IAAAA,QAAQ,CACJ,EACI,GAAGD,KADP;AAEI,OAACQ,CAAC,CAACC,MAAF,CAASP,IAAV,GAAiBM,CAAC,CAACC,MAAF,CAASC;AAF9B,KADI,CAAR;AAMH,GARD;;AAUA,WAASC,YAAT,CAAsBH,CAAtB,EACA;AACIA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAGZ,KAAK,CAACE,IAAN,KAAe,EAAlB,EACA;AACIE,MAAAA,IAAI,CAACS,OAAL,CAAaC,KAAb,CAAmBC,OAAnB,GAA6B,cAA7B;AACAV,MAAAA,KAAK,CAACQ,OAAN,CAAcR,KAAd;AACA;AACH,KALD,MAOA;AACID,MAAAA,IAAI,CAACS,OAAL,CAAaC,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACH;;AAED,QAAGhB,KAAK,CAACiB,IAAN,KAAe,UAAlB,EACA;AACIjB,MAAAA,KAAK,CAACkB,OAAN,CAAcjB,KAAK,CAACE,IAApB;AACH,KAHD,MAKA;AACIH,MAAAA,KAAK,CAACkB,OAAN,CAAcjB,KAAK,CAACE,IAApB,EAA0BF,KAAK,CAACG,IAAhC;AACH;;AAEDH,IAAAA,KAAK,CAACE,IAAN,GAAa,EAAb;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,EAAb;AACH;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,QAAQ,EAAEA,YAAhC;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,gBAFP;AAGI,QAAA,SAAS,EAAC,kBAHd;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,YAAY,EAAC,KALjB;AAMI,QAAA,WAAW,EAAC,UANhB;AAOI,QAAA,KAAK,EAAEX,KAAK,CAACE,IAPjB;AAQI,QAAA,QAAQ,EAAEK,YARd;AASI,QAAA,GAAG,EAAEF;AATT;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI;AAAM,MAAA,GAAG,EAAED,IAAX;AAAiB,MAAA,SAAS,EAAC,UAA3B;AAAsC,MAAA,KAAK,EAAE;AAACW,QAAAA,OAAO,EAAE,MAAV;AAAkBG,QAAAA,KAAK,EAAE;AAAzB,OAA7C;AAAA,gBAA+EZ;AAA/E;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAzEQR,W;;KAAAA,W;AA2ET,eAAeA,WAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport ButtonIcons from './ButtonIcons';\n\nfunction NewTaskForm(props)\n{\n    const [state, setState] = useState(\n        {\n            name: \"\",\n            date: \"\"\n        }\n    );\n\n    const show = useRef(null);\n    const focus = useRef(null);\n\n    let err = \"*Your task needs a name\"\n\n    const handleChange = (e) =>\n    {\n        setState(\n            {\n                ...state, \n                [e.target.name]: e.target.value\n            }\n        )\n    }\n\n    function handleSubmit(e)\n    {\n        e.preventDefault();\n\n        if(state.name === \"\")\n        {\n            show.current.style.display = \"inline-block\";\n            focus.current.focus();\n            return;\n        } \n        else \n        {\n            show.current.style.display = \"none\";\n        }\n\n        if(props.type === \"Priority\")\n        {\n            props.addTask(state.name);\n        }\n        else \n        {\n            props.addTask(state.name, state.date);\n        }\n\n        state.name = \"\";\n        state.date = \"\";\n    }\n\n    return(\n        <Form onSubmit={handleSubmit}>      \n            <div id=\"newTaskForm\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    id=\"new-todo-input\"\n                    className=\"inFields newTask\"\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    placeholder=\"New Task\"\n                    value={state.name}\n                    onChange={handleChange}\n                    ref={focus}\n                />\n                <Button type=\"submit\" className=\"buttonScheme\">\n                    <ButtonIcons type=\"Add\"/>\n                </Button>\n            </div>\n            <span ref={show} className=\"errorMsg\" style={{display: \"none\", color: \"red\"}}>{err}</span>\n        </Form>\n    );\n}\n\nexport default NewTaskForm;"]},"metadata":{},"sourceType":"module"}