{"ast":null,"code":"var _jsxFileName = \"/home/trip/Desktop/gitless/frontend/src/components/TaskList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Card, ListGroup } from 'react-bootstrap';\nimport { ImageBackground, View, StyleSheet, TextInput } from 'react-native';\nimport axios from 'axios';\nimport bg from './../assets/background.png';\nimport Task from './Task';\nimport FilterButtons from './FilterButtons';\nimport NewTaskForm from './NewTaskForm';\nimport ButtonIcons from './ButtonIcons';\nimport DeleteConfirmation from './DeleteConfirmation';\nimport path from './Path.js'; // import styles from './../assets/style'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction usePrevious(value) {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n;\n\nfunction ToDoList(props) {\n  _s2();\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState(props.name);\n  const [isEditing, setEditing] = useState(false);\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n  const [delCon, setDelCon] = useState(false);\n  const addRes = useRef(null);\n\n  const handleChange = e => {\n    setName(e.target.value);\n  }; // Filter names and conditions\n\n\n  const FILTER_MAP = {\n    All: () => true,\n    Unfinished: task => task.completed === false,\n    Completed: task => task.completed\n  };\n  const FILTER_NAMES = Object.keys(FILTER_MAP); // Toggle for filter/browser to unify state\n\n  function toggleTaskCompleted(id) {\n    let completed = false;\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        completed = !task.completed;\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    const config = {\n      method: 'post',\n      url: path.updateTask,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        token: localStorage.getItem(\"toke\"),\n        completed: completed\n      }\n    };\n    axios(config).then(function (response) {\n      var res = response.data;\n\n      if (res.error) {\n        setMessage('Error editing task');\n        addRes.current.style.display = \"inline-block\";\n        return;\n      }\n\n      setTasks(updatedTasks);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // For rendering desired number of tasks based on task props\n\n\n  const taskList = tasks === null || tasks === void 0 ? void 0 : tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(Task, {\n    id: task.id,\n    name: task.text,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 13\n  }, this)); // For rendering desired number of filter buttons by name and condition\n\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButtons, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this));\n\n  function addTask(name) {\n    const config = {\n      method: 'post',\n      url: path.createTask,\n      data: {\n        token: localStorage.getItem(\"token\"),\n        completed: false,\n        text: name,\n        text: date,\n        text: urgency,\n        text: description\n      }\n    }; //const config = {method: \"post\",  url: path.createQuest, headers: {Authorization: `Bearer ${token}`}, };  \n\n    axios.post(path.createTask, obj, config).catch(error => console.error('Error: ', error));\n  }\n\n  function editTask(id, newName) {\n    const config = {\n      method: 'post',\n      url: path.updateTask,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        token: localStorage.getItem(\"token\"),\n        text: newName\n      }\n    };\n    axios.post(path.updateTask, obj, config).catch(error => console.error('Error: ', error));\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    const config = {\n      method: 'post',\n      url: path.deleteTask,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        \"token\": localStorage.getItem(\"token\")\n      }\n    };\n    axios(config).then(function (response) {\n      const res = response.data;\n\n      if (res.error) {\n        setMessage('Error deleting task');\n        addRes.current.style.display = \"inline-block\";\n        return;\n      }\n\n      setTasks(remainingTasks);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editList(props.id, name, props.tasks);\n    setName(name); // re-init. date and setting editing state to false\n\n    setEditing(false);\n  }\n\n  function handleDelete(choice, id) {\n    console.log(choice);\n\n    if (choice == true) {\n      props.deleteList(id);\n      setDelCon(false);\n    } else {\n      setDelCon(false);\n    }\n  }\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(Card.Body, {\n    className: \"cardContent\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form editTask\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editFields splitFields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: props.id,\n          name: \"name\",\n          className: \"todo-text inFields\",\n          type: \"text\",\n          value: name,\n          onChange: handleChange,\n          ref: editFieldRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editBtns editRow\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"buttonScheme schedButton\",\n            onClick: () => setEditing(false),\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"buttonScheme schedButton\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterBtns priority\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      variant: \"flush\",\n      className: \"listAdjust\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n  /*      filter list view\r\n              <div className=\"filterBtns priority\">\r\n                  {filterList}\r\n              </div> */\n\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(Card.Body, {\n    className: \"cardContent\",\n    children: [!props.singleView ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"singleView\",\n        href: `/list/${props.id}`,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn listCtrl\",\n      onClick: () => setEditing(true),\n      ref: editButtonRef,\n      children: /*#__PURE__*/_jsxDEV(ButtonIcons, {\n        type: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn delListView\",\n      onClick: () => setDelCon(true),\n      children: /*#__PURE__*/_jsxDEV(ButtonIcons, {\n        type: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      variant: \"flush\",\n      className: \"listAdjust\",\n      children: (taskList === null || taskList === void 0 ? void 0 : taskList.length) < 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 44\n        }, this), \"Add a new task below\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 41\n      }, this) : taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      type: \"Priority\",\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"taskResult\",\n      ref: addRes,\n      style: {\n        display: \"none\",\n        color: \"red\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: delCon ? /*#__PURE__*/_jsxDEV(DeleteConfirmation, {\n      id: props.id,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 27\n    }, this) : isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 13\n  }, this);\n}\n\n_s2(ToDoList, \"2KlgeJw+wis5v5p1ejMwRl3Zf2U=\", false, function () {\n  return [usePrevious];\n});\n\n_c = ToDoList;\nexport default ToDoList;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  menuWrap: {\n    backgroundColor: \"#FBE8B3\",\n    marginTop: 30,\n    borderRadius: 25,\n    width: 800,\n    height: \"90%\",\n    alignItems: \"center\",\n    borderColor: \"#C92D2D\",\n    borderWidth: 4,\n    overflow: \"hidden\"\n  },\n  wrap: {\n    align: \"center\",\n    backgroundColor: \"#a6dee3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: \"1\"\n  },\n  image: {\n    marginTop: -10,\n    marginBottom: 20,\n    width: 300,\n    height: 100\n  },\n  inputView: {\n    backgroundColor: \"#A1869E\",\n    borderRadius: 30,\n    width: \"30%\",\n    height: 40,\n    marginBottom: 14,\n    alignItems: \"center\"\n  },\n  loginText: {\n    fontFamily: \"Garamond, serif\",\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    textAlign: 'center'\n  },\n  forgot_button: {\n    height: 30,\n    paddingTop: 10,\n    marginBottom: 10,\n    alignItems: 'center',\n    fontFamily: \"Garamond, serif\",\n    fontSize: 14,\n    fontWeight: \"bolder\",\n    marginTop: -10,\n    marginBottom: 10,\n    padding: 20\n  },\n  shadowProp: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3\n  },\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#797596\"\n  },\n  registerBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#797596\"\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/home/trip/Desktop/gitless/frontend/src/components/TaskList.js"],"names":["React","useEffect","useRef","useState","Button","Card","ListGroup","ImageBackground","View","StyleSheet","TextInput","axios","bg","Task","FilterButtons","NewTaskForm","ButtonIcons","DeleteConfirmation","path","usePrevious","value","ref","current","ToDoList","props","tasks","setTasks","filter","setFilter","message","setMessage","name","setName","isEditing","setEditing","editFieldRef","editButtonRef","wasEditing","delCon","setDelCon","addRes","handleChange","e","target","FILTER_MAP","All","Unfinished","task","completed","Completed","FILTER_NAMES","Object","keys","toggleTaskCompleted","id","updatedTasks","map","config","method","url","updateTask","headers","data","token","localStorage","getItem","then","response","res","error","style","display","catch","console","log","taskList","text","deleteTask","editTask","filterList","addTask","createTask","date","urgency","description","post","obj","newName","Authorization","remainingTasks","handleSubmit","preventDefault","editList","handleDelete","choice","deleteList","editingTemplate","viewTemplate","singleView","length","color","focus","styles","create","container","flex","backgroundColor","alignItems","justifyContent","menuWrap","marginTop","borderRadius","width","height","borderColor","borderWidth","overflow","wrap","align","image","marginBottom","inputView","loginText","fontFamily","fontWeight","textAlign","forgot_button","paddingTop","fontSize","padding","shadowProp","shadowColor","shadowOffset","shadowOpacity","shadowRadius","loginBtn","registerBtn"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Card, ListGroup } from 'react-bootstrap';\r\nimport {ImageBackground, View, StyleSheet, TextInput} from 'react-native';\r\nimport axios from 'axios';\r\nimport bg from './../assets/background.png'\r\nimport Task from './Task';\r\nimport FilterButtons from './FilterButtons';\r\nimport NewTaskForm from './NewTaskForm';\r\nimport ButtonIcons from './ButtonIcons';\r\nimport DeleteConfirmation from './DeleteConfirmation';\r\nimport path from './Path.js'\r\n// import styles from './../assets/style'\r\n\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n};\r\n\r\nfunction ToDoList(props) {\r\n\r\n    const [tasks, setTasks] = useState(props.tasks);\r\n    const [filter, setFilter] = useState('All');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const [name, setName] = useState(props.name);\r\n    const [isEditing, setEditing] = useState(false);\r\n    const editFieldRef = useRef(null);\r\n    const editButtonRef = useRef(null);\r\n    const wasEditing = usePrevious(isEditing);\r\n    const [delCon, setDelCon] = useState(false);\r\n\r\n    const addRes = useRef(null);\r\n\r\n    const handleChange = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    // Filter names and conditions\r\n    const FILTER_MAP = {\r\n        All: () => true,\r\n        Unfinished: task => task.completed === false,\r\n        Completed: task => task.completed\r\n    };\r\n\r\n    const FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\n\r\n    // Toggle for filter/browser to unify state\r\n    function toggleTaskCompleted(id) {\r\n        let completed = false;\r\n        const updatedTasks = tasks.map(task => {\r\n\r\n            if (id === task.id) {\r\n                completed = !task.completed;\r\n                return { ...task, completed: !task.completed }\r\n            }\r\n\r\n            return task;\r\n        });\r\n        \r\n        const config = {\r\n            method: 'post',\r\n            url: path.updateTask,\r\n            headers:\r\n            {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: {\r\n                token: localStorage.getItem(\"toke\"),\r\n                completed: completed\r\n            }\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                var res = response.data;\r\n                if (res.error) {\r\n                    setMessage('Error editing task');\r\n                    addRes.current.style.display = \"inline-block\";\r\n                    return;\r\n                }\r\n\r\n                setTasks(updatedTasks);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // For rendering desired number of tasks based on task props\r\n    const taskList = tasks\r\n        ?.filter(FILTER_MAP[filter])\r\n        .map(task => (\r\n            <Task\r\n                id={task.id}\r\n                name={task.text}\r\n                completed={task.completed}\r\n                key={task.id}\r\n                toggleTaskCompleted={toggleTaskCompleted}\r\n                deleteTask={deleteTask}\r\n                editTask={editTask}\r\n            />\r\n        ));\r\n\r\n    // For rendering desired number of filter buttons by name and condition\r\n    const filterList = FILTER_NAMES.map(name => (\r\n        <FilterButtons\r\n            key={name}\r\n            name={name}\r\n            isPressed={name === filter}\r\n            setFilter={setFilter}\r\n        />\r\n    ));\r\n\r\n    function addTask(name) {\r\n        const config = {\r\n            method: 'post',\r\n            url: path.createTask,\r\n            data: {\r\n                token: localStorage.getItem(\"token\"),\r\n                completed: false,\r\n                text: name,\r\n                text: date,\r\n                text: urgency,\r\n                text: description\r\n            }\r\n        };\r\n\r\n        //const config = {method: \"post\",  url: path.createQuest, headers: {Authorization: `Bearer ${token}`}, };  \r\n        axios.post(path.createTask, obj, config) \r\n        .catch(error => console.error('Error: ', error));\r\n    }\r\n\r\n    function editTask(id, newName) {\r\n\r\n        const config = {\r\n            method: 'post',\r\n            url: path.updateTask,\r\n            headers: {Authorization: `Bearer ${token}`},\r\n            data: {\r\n                token: localStorage.getItem(\"token\"),\r\n                text: newName\r\n            }\r\n        };\r\n\r\n        axios.post(path.updateTask, obj, config) \r\n        .catch(error => console.error('Error: ', error));\r\n    }\r\n\r\n    function deleteTask(id) {\r\n        const remainingTasks = tasks.filter(task => id !== task.id);\r\n        const config = {\r\n            method: 'post',\r\n            url: path.deleteTask,\r\n            headers: {Authorization: `Bearer ${token}`},\r\n            data: {\r\n                \"token\": localStorage.getItem(\"token\")\r\n            }\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n\r\n                const res = response.data;\r\n                if (res.error) {\r\n                    setMessage('Error deleting task');\r\n                    addRes.current.style.display = \"inline-block\";\r\n                    return;\r\n                }\r\n\r\n                setTasks(remainingTasks);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.editList(props.id, name, props.tasks);\r\n        setName(name);\r\n        // re-init. date and setting editing state to false\r\n        setEditing(false);\r\n    }\r\n\r\n    function handleDelete(choice, id){\r\n\r\n        console.log(choice);\r\n        if(choice == true){\r\n            props.deleteList(id);\r\n            setDelCon(false);\r\n        } else{\r\n            setDelCon(false);\r\n        }\r\n    }\r\n\r\n    const editingTemplate = (\r\n    <Card.Body className=\"cardContent\">\r\n        <form className=\"form editTask\" onSubmit={handleSubmit}>\r\n            <div className=\"editFields splitFields\">\r\n                <input\r\n                    id={props.id}\r\n                    name=\"name\"\r\n                    className=\"todo-text inFields\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    ref={editFieldRef}\r\n                />\r\n                <div className=\"editBtns editRow\">\r\n                    <Button\r\n                        type=\"button\"\r\n                        className=\"buttonScheme schedButton\"\r\n                        onClick={() => setEditing(false)}\r\n                    >\r\n                        Test\r\n                    </Button>\r\n                    <Button type=\"submit\" className=\"buttonScheme schedButton\">\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div className=\"filterBtns priority\">\r\n            {filterList}\r\n        </div>\r\n        <ListGroup variant=\"flush\" className=\"listAdjust\">\r\n            {taskList}\r\n        </ListGroup>\r\n        <NewTaskForm addTask={addTask} />\r\n    </Card.Body>\r\n    );\r\n\r\n/*      filter list view\r\n            <div className=\"filterBtns priority\">\r\n                {filterList}\r\n            </div> */\r\n\r\n    const viewTemplate = (\r\n        <Card.Body className=\"cardContent\">\r\n            {\r\n                !props.singleView\r\n                    ? <h1><a className=\"singleView\" href={`/list/${props.id}`}>{props.name}</a></h1>\r\n                    : <h1>{props.name}</h1>\r\n            }\r\n\r\n            <button \r\n                type=\"button\" \r\n                className=\"btn listCtrl\" \r\n                onClick={ () => setEditing(true) } \r\n                ref={editButtonRef}\r\n            >\r\n                <ButtonIcons type=\"Edit\" />\r\n            </button>\r\n            <button \r\n                type=\"button\"\r\n                className=\"btn delListView\" \r\n                onClick={() => setDelCon(true)}\r\n            >\r\n                <ButtonIcons type=\"Delete\" />\r\n            </button>\r\n            <ListGroup variant=\"flush\" className=\"listAdjust\">\r\n                {taskList?.length < 1 ? <p><br />Add a new task below</p> : taskList}\r\n            </ListGroup>\r\n            <NewTaskForm type=\"Priority\" addTask={addTask} />\r\n            <span id=\"taskResult\" ref={addRes} style={{ display: \"none\", color: \"red\" }}>{message}</span>\r\n        </Card.Body>\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!wasEditing && isEditing) {\r\n            editFieldRef.current.focus();\r\n        }\r\n        if (wasEditing && !isEditing) {\r\n            editButtonRef.current.focus();\r\n        }\r\n    }, [wasEditing, isEditing]);\r\n\r\n    return (\r\n            <View>\r\n                {delCon ? <DeleteConfirmation id={props.id} handleDelete={handleDelete}/> : (isEditing ? editingTemplate : viewTemplate)}\r\n            </View>\r\n    );\r\n}\r\n\r\nexport default ToDoList;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  menuWrap:{\r\n    backgroundColor: \"#FBE8B3\",\r\n    marginTop: 30,\r\n    borderRadius: 25,\r\n    width: 800,\r\n    height: \"90%\",\r\n    alignItems: \"center\",\r\n    borderColor : \"#C92D2D\",\r\n    borderWidth: 4,\r\n    overflow: \"hidden\",\r\n  },\r\n\r\n  wrap:{\r\n    align: \"center\",\r\n    backgroundColor:\"#a6dee3\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: \"1\",\r\n  },\r\n\r\n  image: {\r\n    marginTop: -10,\r\n    marginBottom: 20,\r\n    width: 300,\r\n    height: 100,\r\n  },\r\n\r\n  inputView: {\r\n    backgroundColor: \"#A1869E\",\r\n    borderRadius: 30,\r\n    width: \"30%\",\r\n    height: 40,\r\n    marginBottom: 14,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  loginText:{\r\n    fontFamily: \"Garamond, serif\",\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n\r\n  TextInput: {\r\n    height: 50,\r\n    flex: 1,\r\n    textAlign: 'center',\r\n  },\r\n\r\n  forgot_button: {\r\n    height: 30,\r\n    paddingTop: 10,\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n    fontFamily: \"Garamond, serif\",\r\n    fontSize: 14,\r\n    fontWeight: \"bolder\",\r\n    marginTop: -10,\r\n    marginBottom: 10,\r\n    padding: 20,\r\n  },\r\n\r\n  shadowProp: {\r\n    shadowColor: '#171717',\r\n    shadowOffset: {width: -2, height: 4},\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 3,\r\n  },\r\n\r\n  loginBtn: {\r\n    width: \"40%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n    backgroundColor: \"#797596\",\r\n  },\r\n\r\n  registerBtn: {\r\n    width: \"40%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n    backgroundColor: \"#797596\",\r\n  },\r\n});      "]},"metadata":{},"sourceType":"module"}