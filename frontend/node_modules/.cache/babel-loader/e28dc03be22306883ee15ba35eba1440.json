{"ast":null,"code":"var _jsxFileName = \"/home/trip/Desktop/gitless/frontend/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { StatusBar } from \"expo-status-bar\";\nimport { BrowserRouter as Router, Route, Routes, Redirect, Switch, Link } from 'react-router-dom';\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Image, TextInput, Button, TouchableOpacity, ImageBackground } from \"react-native\";\nimport logo from './assets/QU3ST2.png';\nimport bg from './assets/background.png';\nimport Register from \"./register\";\nimport textStyling from './assets/textStyling.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar obj = {\n  email: \"\",\n  password: \"\"\n};\nlet cod = \"fish\";\nlet token = \"\";\nlet questArr = [];\nlet curr_quest_id = \"\";\nlet questName = \"\";\nlet description = \"\";\nlet index = 0;\nexport default function Login() {\n  _s();\n\n  const getQuests = async event => {\n    console.log(cod); //event.preventDefault();\n    // FIXME: Pull Login And Password From Our Fields\n\n    var obj = {};\n    var js = JSON.stringify(obj);\n\n    try {\n      //\n      const response = await fetch('https://quest-task.herokuapp.com/api/listQuests', {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      });\n      var res = JSON.parse(await response.text());\n      console.log(res);\n\n      if (res.error) {\n        console.log(\"error getting quest id list\");\n        console.log(res.error);\n        setErrorMessage(res.error.message);\n      } else {\n        console.log(\"no error getting quest id list\");\n        var hen = res.quests; //var quests = {FirstName:res.FirstName,LastName:res.LastName, Token:res.Token}\n        //localStorage.setItem('quests', JSON.stringify(quests));\n        //console.log(user);\n        // TODO: Route To Dashboard Page And Send User Info\n        // window.location.href = '/';\n        // For Loop To View All Quest IDs\n\n        questArr = [];\n\n        for (let i = 0; i < hen.length; i++) {\n          curr_quest_id = hen[i];\n          index = i;\n          viewQuests();\n        }\n\n        console.log('Quest Array Right Here:');\n        localStorage.setItem('quest_data', JSON.stringify(questArr));\n        console.log(questArr);\n        console.log(localStorage.getItem('quest_data')); // curr_quest_id = questID[i]\n        // index = i\n        // viewQuest (within this we set  = return value)\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  };\n\n  const viewQuests = async event => {\n    console.log(cod); //event.preventDefault();\n    // FIXME: Pull Login And Password From Our Fields\n\n    var obj = {\n      id: curr_quest_id\n    };\n    var js = JSON.stringify(obj);\n    console.log(\"View View\");\n\n    try {\n      //\n      const response = await fetch('https://quest-task.herokuapp.com/api/viewQuest', {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      });\n      var res = JSON.parse(await response.text());\n      console.log(res);\n\n      if (res.error) {\n        console.log(\"error reading quests\");\n        console.log(res.error);\n        setErrorMessage(res.error.message);\n      } else {\n        console.log(\"no error reading quests\");\n        console.log(res.quest);\n        var quests = {\n          name: res.quest.name,\n          description: res.quest.description,\n          id: res.quest._id\n        };\n        localStorage.setItem('quest_reee', JSON.stringify(quests));\n        console.log(\"Look at me!\");\n        console.log(JSON.parse(localStorage.getItem('quest_reee')));\n        questArr.push(quests);\n        questName = res.quest.name;\n        description = res.quest.description;\n        console.log(questName);\n        console.log(description);\n        console.log(questArr);\n        localStorage[\"mydatas\"] = JSON.stringify(questArr);\n        console.log(JSON.parse(localStorage[\"mydatas\"]));\n        console.log(JSON.parse(localStorage[\"mydatas\"])[0].id);\n        localStorage[\"First_Adress\"] = JSON.stringify(JSON.parse(localStorage[\"mydatas\"])[0].id); //localStorage.setItem('quests', JSON.stringify(quests));\n        //console.log(user);\n        // TODO: Route To Dashboard Page And Send User Info\n        // window.location.href = '/';\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  };\n\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  const doRegister = async event => {\n    window.location.href = '/register';\n  }; // Function To Log User In\n  // Takes Email and \n  // Returns Error JSON If Error Occured\n  // Returns Token If Valid\n\n\n  const doLogin = async event => {\n    console.log(obj); //event.preventDefault();\n    // FIXME: Pull Login And Password From Our Fields\n    //var obj = {email:\"culltrip@gmail.com\",password:\"COP4331!p\"};\n\n    var js = JSON.stringify(obj);\n\n    try {\n      //\n      const response = await fetch('https://quest-task.herokuapp.com/api/login', {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var res = JSON.parse(await response.text()); //console.log(res);\n\n      if (res.error) {\n        console.log(res.error);\n        setErrorMessage(res.error.message);\n      } else {\n        console.log(\"no error\");\n        var user = {\n          FirstName: res.user.FirstName,\n          LastName: res.user.LastName,\n          Token: res.user.Token\n        };\n        localStorage.setItem('user_data', JSON.stringify(user));\n        console.log(user);\n        token = res.user.token; // TODO: Route To Dashboard Page And Send User Info\n\n        await getQuests();\n        log(questArr); //window.location.href = '/dash';\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  };\n\n  const [state, setState] = useState({\n    loginName: \"\",\n    loginPassword: \"\"\n  });\n\n  const setEmail = email => {\n    obj.email = email;\n  };\n\n  const setPassword = password => {\n    obj.password = password;\n  };\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.wrap,\n    children: /*#__PURE__*/_jsxDEV(ImageBackground, {\n      source: bg,\n      style: {\n        width: '100%',\n        height: '100%',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: styles.menuWrap,\n        children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n          style: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          source: logo,\n          style: {\n            width: 750,\n            height: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginTitle\",\n          children: \"Where your everyday tasks make you the hero.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          style: [styles.inputView, styles.shadowProp],\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            style: styles.TextInput,\n            placeholder: \"Email\",\n            placeholderTextColor: \"#003f5c\",\n            onChangeText: email => setEmail(email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          style: [styles.inputView, styles.shadowProp],\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            style: styles.TextInput,\n            placeholder: \"Password\",\n            placeholderTextColor: \"#003f5c\",\n            secureTextEntry: true,\n            onChangeText: password => setPassword(password)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.forgot_button,\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n          onPress: () => doLogin(),\n          style: [styles.loginBtn, styles.shadowProp],\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.loginText,\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n          onPress: () => doRegister(),\n          style: [styles.registerBtn, styles.shadowProp],\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.loginText,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 7\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: [\" \", errorMessage, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"2HqvOAfH4u8A1IREnxyTpQHrYkA=\");\n\n_c = Login;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  menuWrap: {\n    backgroundColor: \"#FBE8B3\",\n    marginTop: 30,\n    borderRadius: 25,\n    width: 800,\n    height: \"90%\",\n    alignItems: \"center\",\n    borderColor: \"#C92D2D\",\n    borderWidth: 4,\n    overflow: \"hidden\"\n  },\n  wrap: {\n    align: \"center\",\n    backgroundColor: \"#a6dee3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: \"1\"\n  },\n  image: {\n    marginTop: -10,\n    marginBottom: 20,\n    width: 300,\n    height: 100\n  },\n  inputView: {\n    backgroundColor: \"#A1869E\",\n    borderRadius: 30,\n    width: \"30%\",\n    height: 40,\n    marginBottom: 14,\n    alignItems: \"center\"\n  },\n  loginText: {\n    fontFamily: \"Garamond, serif\",\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    textAlign: 'center'\n  },\n  forgot_button: {\n    height: 30,\n    paddingTop: 10,\n    marginBottom: 10,\n    alignItems: 'center',\n    fontFamily: \"Garamond, serif\",\n    fontSize: 14,\n    fontWeight: \"bolder\",\n    marginTop: -10,\n    marginBottom: 10,\n    padding: 20\n  },\n  shadowProp: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3\n  },\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#797596\"\n  },\n  registerBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#797596\"\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/trip/Desktop/gitless/frontend/src/Login.js"],"names":["StatusBar","BrowserRouter","Router","Route","Routes","Redirect","Switch","Link","React","useState","StyleSheet","Text","View","Image","TextInput","Button","TouchableOpacity","ImageBackground","logo","bg","Register","textStyling","obj","email","password","cod","token","questArr","curr_quest_id","questName","description","index","Login","getQuests","event","console","log","js","JSON","stringify","response","fetch","method","body","headers","res","parse","text","error","setErrorMessage","message","hen","quests","i","length","viewQuests","localStorage","setItem","getItem","e","alert","toString","id","quest","name","_id","push","errorMessage","doRegister","window","location","href","doLogin","user","FirstName","LastName","Token","state","setState","loginName","loginPassword","setEmail","setPassword","styles","wrap","width","height","alignItems","menuWrap","inputView","shadowProp","forgot_button","loginBtn","loginText","registerBtn","create","container","flex","backgroundColor","justifyContent","marginTop","borderRadius","borderColor","borderWidth","overflow","align","image","marginBottom","fontFamily","fontWeight","color","textAlign","paddingTop","fontSize","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { BrowserRouter as Router, Route, Routes, Redirect, Switch, Link } from 'react-router-dom';\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Button,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\nimport logo from './assets/QU3ST2.png';\nimport bg from './assets/background.png';\nimport Register from \"./register\";\nimport textStyling from './assets/textStyling.css';\n\nvar obj = {email:\"\",password:\"\"}\n\nlet cod = \"fish\";\nlet token = \"\";\nlet questArr = [];\nlet curr_quest_id = \"\";\nlet questName = \"\";\nlet description = \"\";\nlet index = 0;\n\nexport default function Login() {\n  \n  const getQuests = async event => \n  {\n    console.log(cod);\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var obj = {};\n      var js = JSON.stringify(obj);\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/listQuests',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json', 'Authorization': token}});\n\n          var res = JSON.parse(await response.text());\n          console.log(res);\n            if( res.error )\n            {\n              console.log(\"error getting quest id list\");\n              console.log(res.error)\n              setErrorMessage(res.error.message);\n            }\n            else\n            {\n                console.log(\"no error getting quest id list\");\n                var hen = res.quests;\n                //var quests = {FirstName:res.FirstName,LastName:res.LastName, Token:res.Token}\n                //localStorage.setItem('quests', JSON.stringify(quests));\n                //console.log(user);\n                // TODO: Route To Dashboard Page And Send User Info\n                // window.location.href = '/';\n                // For Loop To View All Quest IDs\n\n                questArr = [];\n                for (let i = 0; i < hen.length; i++) \n                {\n                  curr_quest_id = hen[i];\n                  index = i;\n                  viewQuests();\n                }\n                console.log('Quest Array Right Here:');\n                localStorage.setItem('quest_data', JSON.stringify(questArr));\n                console.log(questArr);\n                console.log(localStorage.getItem('quest_data'))\n                  // curr_quest_id = questID[i]\n                  // index = i\n                  // viewQuest (within this we set  = return value)\n            }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n  \n  const viewQuests = async event => \n  {\n    console.log(cod);\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var obj = {id:curr_quest_id};\n      var js = JSON.stringify(obj);\n      console.log(\"View View\");\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/viewQuest',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json', 'Authorization': token}});\n\n          var res = JSON.parse(await response.text());\n          console.log(res);\n            if( res.error )\n            {\n              console.log(\"error reading quests\");\n              console.log(res.error)\n              setErrorMessage(res.error.message);\n            }\n            else\n            {\n                console.log(\"no error reading quests\");\n                console.log(res.quest);\n                var quests = {\n                  name:res.quest.name,\n                  description:res.quest.description, \n                  id:res.quest._id\n                };\n                localStorage.setItem('quest_reee', JSON.stringify(quests));\n                console.log(\"Look at me!\");\n                console.log(JSON.parse(localStorage.getItem('quest_reee')));\n                questArr.push(quests);\n                questName = res.quest.name;\n                description=res.quest.description;\n                console.log(questName);\n                console.log(description);\n                console.log(questArr);\n\n                localStorage[\"mydatas\"] = JSON.stringify(questArr);\n\n                console.log(JSON.parse(localStorage[\"mydatas\"])); \n                console.log(JSON.parse(localStorage[\"mydatas\"])[0].id); \n                localStorage[\"First_Adress\"] = JSON.stringify(JSON.parse(localStorage[\"mydatas\"])[0].id)\n\n                //localStorage.setItem('quests', JSON.stringify(quests));\n                //console.log(user);\n                // TODO: Route To Dashboard Page And Send User Info\n                // window.location.href = '/';\n            }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n\n\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const doRegister = async event => \n  {\n    window.location.href = '/register';\n  }\n  // Function To Log User In\n  // Takes Email and \n  // Returns Error JSON If Error Occured\n  // Returns Token If Valid\n  const doLogin = async event => \n  {\n\n      console.log(obj);\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      //var obj = {email:\"culltrip@gmail.com\",password:\"COP4331!p\"};\n      var js = JSON.stringify(obj);\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/login',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n          var res = JSON.parse(await response.text());\n          //console.log(res);\n            if( res.error )\n            {\n              console.log(res.error)\n              setErrorMessage(res.error.message);\n            }\n            else\n            {\n                console.log(\"no error\");\n                var user = {FirstName:res.user.FirstName,LastName:res.user.LastName, Token:res.user.Token}\n                localStorage.setItem('user_data', JSON.stringify(user));\n                console.log(user);\n                token = res.user.token;\n                // TODO: Route To Dashboard Page And Send User Info\n                await getQuests();\n                log(questArr);\n                //window.location.href = '/dash';\n            }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }\n      \n  };\n\n     const [state, setState] = useState(\n        {\n            loginName: \"\",\n            loginPassword: \"\"\n        }\n    );\n\n    const setEmail = (email) => {\n      obj.email = email;\n    }\n    const setPassword = (password) => {\n      obj.password = password;\n    }\n\n   return (\n\n    <View style={styles.wrap}>\n      <ImageBackground source={bg} style={{width: '100%', height: '100%', alignItems: 'center'}}>\n\n      <View style={styles.menuWrap}>\n      <StatusBar style=\"auto\" />\n\n      <Image source={logo} style={{ width: 750, height: 300 }} /> \n\n      <div className=\"loginTitle\">Where your everyday tasks make you the hero.</div>\n\n      <View style={[styles.inputView, styles.shadowProp]}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Email\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(email) => setEmail(email)}\n        />\n      </View>\n\n      <View style={[styles.inputView, styles.shadowProp]}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Password\"\n          placeholderTextColor=\"#003f5c\"\n          secureTextEntry={true}\n          onChangeText={(password) => setPassword(password)}\n        />\n      </View>\n\n      <TouchableOpacity>\n        <Text style={styles.forgot_button}>Forgot Password?</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity onPress = {() => doLogin()} style={[styles.loginBtn, styles.shadowProp]}>\n        <Text style={styles.loginText}>LOGIN</Text>\n      </TouchableOpacity>\n      {/* <div className=\"subText\">New here, adventurer? Begin your journey </div> --> */}\n\n      <TouchableOpacity onPress = {() => doRegister()} style={[styles.registerBtn, styles.shadowProp]}>\n        <Text style={styles.loginText}>Register</Text>\n      </TouchableOpacity>\n      {errorMessage && (<p className=\"error\"> {errorMessage} </p>)}\n    </View>\n    </ImageBackground>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  menuWrap:{\n    backgroundColor: \"#FBE8B3\",\n    marginTop: 30,\n    borderRadius: 25,\n    width: 800,\n    height: \"90%\",\n    alignItems: \"center\",\n    borderColor : \"#C92D2D\",\n    borderWidth: 4,\n    overflow: \"hidden\",\n  },\n\n  wrap:{\n    align: \"center\",\n    backgroundColor:\"#a6dee3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: \"1\",\n  },\n\n  image: {\n    marginTop: -10,\n    marginBottom: 20,\n    width: 300,\n    height: 100,\n  },\n\n  inputView: {\n    backgroundColor: \"#A1869E\",\n    borderRadius: 30,\n    width: \"30%\",\n    height: 40,\n    marginBottom: 14,\n    alignItems: \"center\",\n  },\n\n  loginText:{\n    fontFamily: \"Garamond, serif\",\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n\n  TextInput: {\n    height: 50,\n    flex: 1,\n    textAlign: 'center',\n  },\n\n  forgot_button: {\n    height: 30,\n    paddingTop: 10,\n    marginBottom: 10,\n    alignItems: 'center',\n    fontFamily: \"Garamond, serif\",\n    fontSize: 14,\n    fontWeight: \"bolder\",\n    marginTop: -10,\n    marginBottom: 10,\n    padding: 20,\n  },\n\n  shadowProp: {\n    shadowColor: '#171717',\n    shadowOffset: {width: -2, height: 4},\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n  },\n\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#797596\",\n  },\n\n  registerBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#797596\",\n  },\n});"]},"metadata":{},"sourceType":"module"}