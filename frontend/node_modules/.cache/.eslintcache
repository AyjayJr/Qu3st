[{"/home/trip/Desktop/gitless/frontend/src/index.js":"1","/home/trip/Desktop/gitless/frontend/src/reportWebVitals.js":"2","/home/trip/Desktop/gitless/frontend/src/App.js":"3","/home/trip/Desktop/gitless/frontend/src/CharCreate.js":"4","/home/trip/Desktop/gitless/frontend/src/Login.js":"5","/home/trip/Desktop/gitless/frontend/src/register.js":"6","/home/trip/Desktop/gitless/frontend/src/auth.js":"7","/home/trip/Desktop/gitless/frontend/src/dash.js":"8","/home/trip/Desktop/gitless/frontend/src/add.js":"9","/home/trip/Desktop/gitless/frontend/src/table.js":"10","/home/trip/Desktop/gitless/frontend/src/components/Dashboard.js":"11","/home/trip/Desktop/gitless/frontend/src/components/Path.js":"12","/home/trip/Desktop/gitless/frontend/src/components/FilterButtons.js":"13","/home/trip/Desktop/gitless/frontend/src/components/Task.js":"14","/home/trip/Desktop/gitless/frontend/src/components/NewTaskForm.js":"15","/home/trip/Desktop/gitless/frontend/src/components/DeleteConfirmation.js":"16","/home/trip/Desktop/gitless/frontend/src/components/ButtonIcons.js":"17","/home/trip/Desktop/gitless/frontend/src/components/TaskList.js":"18"},{"size":513,"mtime":1638867826809,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1638862133186,"results":"21","hashOfConfig":"20"},{"size":989,"mtime":1638972732978,"results":"22","hashOfConfig":"20"},{"size":2858,"mtime":1638867931260,"results":"23","hashOfConfig":"20"},{"size":10088,"mtime":1638997677641,"results":"24","hashOfConfig":"20"},{"size":5153,"mtime":1638974972176,"results":"25","hashOfConfig":"20"},{"size":3921,"mtime":1638975009400,"results":"26","hashOfConfig":"20"},{"size":11597,"mtime":1638996868274,"results":"27","hashOfConfig":"20"},{"size":9281,"mtime":1638996695452,"results":"28","hashOfConfig":"20"},{"size":3328,"mtime":1638973197142,"results":"29","hashOfConfig":"20"},{"size":3510,"mtime":1638974774834,"results":"30","hashOfConfig":"20"},{"size":272,"mtime":1638876411693,"results":"31","hashOfConfig":"20"},{"size":361,"mtime":1638738473000,"results":"32","hashOfConfig":"20"},{"size":4369,"mtime":1638752107000,"results":"33","hashOfConfig":"20"},{"size":1931,"mtime":1638738473000,"results":"34","hashOfConfig":"20"},{"size":701,"mtime":1638738473000,"results":"35","hashOfConfig":"20"},{"size":565,"mtime":1638738473000,"results":"36","hashOfConfig":"20"},{"size":10778,"mtime":1638973928606,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"12hpobu",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":7,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/trip/Desktop/gitless/frontend/src/index.js",[],["85","86"],"/home/trip/Desktop/gitless/frontend/src/reportWebVitals.js",[],"/home/trip/Desktop/gitless/frontend/src/App.js",["87","88","89","90","91","92"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Switch, Link } from 'react-router-dom';\nimport { render } from \"react-dom\";\nimport Register from \"./register.js\";\nimport CharCreate from \"./CharCreate.js\";\nimport Login from \"./Login.js\";\nimport Auth from \"./auth.js\";\nimport Dash from \"./dash.js\";\nimport Add from \"./add.js\";\n\nexport default function App() {\n\n  const token = localStorage.getItem(\"token\")\n    // true == active user (logged in)\n    const [state, setState] = useState(token !== null && token !== \"\" ? true : false);\n\n\n\n    return (\n      <Router>\n        <Routes>\n        <Route path=\"/\" element={<Login/>}/>\n          <Route path=\"/register\" element={<Register/>}/> \n          <Route path=\"/auth\" element={<Auth/>}/>\n          <Route path=\"/charcreate\" element={<CharCreate/>}/>\n          <Route path=\"/dash\" element={<Dash/>}/>\n          <Route path=\"/add\" element={<Add/>}/>\n        </Routes>\n    </Router>\n  );\n    \n}\n","/home/trip/Desktop/gitless/frontend/src/CharCreate.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"//import { StatusBar } from \"expo-status-bar\";\nimport React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Button,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\nimport logo from './assets/QU3ST2.png';\nimport bg from './assets/background.png';\nimport dummy from './assets/dummy.png';\nimport red from './assets/dummyRed.png';\nimport blue from './assets/dummyBlue.png';\nimport yellow from './assets/dummyYellow.png';\nimport textStyling from './assets/textStyling.css';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nexport default function App() {\n\n  const red = require('./assets/dummyRed.png');\n  const blue = require('./assets/dummyBlue.png');\n  const yellow = require('./assets/dummyYellow.png');\n  const normal = require('./assets/dummy.png');\n  // Do this\n\n  const colours = { red, blue, yellow, normal }\n\n  const [choice, setSelected] = useState(colours.normal)\n  \n\n\n\n  return (\n    <View style={styles.wrap}>\n\n      <View style={styles.menuWrap}> \n\n      <div className=\"title\">Create your hero!</div>\n\n      <View style= {{alignItems : 'center'}}>\n\n    \n      <View style={styles.characterWrap}>\n\n\n      <img src = { choice} style={{ width: 300, height: 300 }} alt = 'colours' />\n\n        \n      </View>\n      </View>\n\n      <View style={{flexDirection:'row', alignItems:'stretch'}}>\n\n      <TouchableOpacity onPress={ () => setSelected(colours.red)} style={styles.choiceWrap}>\n      <Image source={red} style={{ width: 100, height: 100 }} /> \n      </TouchableOpacity>\n\n      <TouchableOpacity onPress={ () => setSelected(colours.blue)} style={styles.choiceWrap}>\n      <Image source={blue} style={{ width: 100, height: 100 }} /> \n      </TouchableOpacity>\n\n      <TouchableOpacity onPress= { () => setSelected(colours.yellow) } style={styles.choiceWrap}>\n      <Image source={yellow} style={{ width: 100, height: 100 }} /> \n      </TouchableOpacity>\n\n      </View>\n\n      </View>\n\n    </View>\n\n    \n  );\n  }\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  wrap:{\n    backgroundColor:\"#a6dee3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n  },\n  menuWrap:{\n    borderRadius: 20,\n    width: \"70%\",\n    height: \"90%\",\n    marginBottom: 20,\n    marginTop: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  characterWrap:{\n    backgroundColor: \"#FBE8B3\",\n    borderRadius: 20,\n    width: 1000,\n    height: 400,\n    alignItems: \"center\",\n    borderColor : \"#C92D2D\",\n    borderWidth: 3,\n    overflow: \"hidden\",\n  },\n\n  choiceWrap:{\n    backgroundColor: \"#ffffff\",\n    borderRadius: 20,\n    height: 130,\n    width: 125,\n    margin: 15,\n    borderColor : \"#C92D2D\",\n    borderWidth: 3,\n  }\n}\n)\n;\n","/home/trip/Desktop/gitless/frontend/src/Login.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"/home/trip/Desktop/gitless/frontend/src/register.js",["123","124","125","126","127","128","129","130","131"],"import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Redirect, Switch, Link } from 'react-router-dom';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\nimport logo from './assets/QU3ST2.png';\nimport textStyling from './assets/textStyling.css';\n\nvar obj = {email:\"\",password:\"\",first:\"\", last:\"\"}\n\nexport default function Register() {\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  const setemail = (email) => {\n    obj.email = email;\n  }\n  const setpassword = (password) => {\n    obj.password = password;\n  }\n  const setfirst = (first) => {\n    obj.first = first;\n  }\n  const setlast = (last) => {\n    obj.last = last;\n  }\n\n  const doRegister = async event => \n  {\n      console.log(obj)\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var js = JSON.stringify(obj);\n      try\n      {    \n          //https\n          const response = await fetch('https://quest-task.herokuapp.com/api/register',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n          var res = JSON.parse(await response.text());\n          //console.log(res);\n          if( res.error )\n          {\n              // TODO: Send User Error Message\n              console.log(res.error.message);\n              setErrorMessage(res.error.message);\n          }\n          else\n          {\n              console.log(\"no error\");\n              console.log(res);\n              localStorage.setItem('regi_info', JSON.stringify(obj));\n              console.log(obj);\n              // This is where we will move to auth phase\n              window.location.href = '/auth';\n          }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n  const goHome = async event => \n  {\n    window.location.href = '/..';\n  }\n\n  return (\n    <View style={styles.wrap}>\n    \n      <StatusBar style=\"auto\" />\n\n      <View style={[styles.regBox, textStyling.bg]}>\n      <Image source={logo} style={{ width: 375, height: 150 }} /> \n\n      <div className=\"regTitle\">The Journey begins...</div>\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"FirstName\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(first) => setfirst(first)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Last Name\"\n          placeholderTextColor=\"#003f5c\"\n          \n          onChangeText={(last) => setlast(last)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Email\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(email) => setemail(email)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Password\"\n          placeholderTextColor=\"#003f5c\"\n          secureTextEntry={true}\n          onChangeText={(password) => setpassword(password)}\n        />\n      </View>\n\n      <TouchableOpacity onPress = {() => doRegister()} style={styles.loginBtn}> \n        <Text style={styles.buttonText}>Embark!</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity onPress = {() => goHome()} style={styles.nvm}>\n        <Text style={styles.buttonText}>Return to Login</Text>\n      </TouchableOpacity>\n      {errorMessage && (<p className=\"error\"> {errorMessage} </p>)}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  wrap:{\n    backgroundColor:\"#a6dee3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: \"1\",\n  },\n\n  regBox:{\n    align: \"center\",\n    backgroundColor: \"#FBE8B3\",\n    borderColor : \"#C92D2D\",\n    borderWidth : 3,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"90%\",\n    padding: \"10\",\n    width: \"60%\",\n    borderRadius: \"10%\",\n  },\n\n  image: {\n    marginBottom: 40,\n    width: 300,\n    height: 100,\n  },\n\n  inputView: {\n    backgroundColor: \"#E5A4CB\",\n    borderColor : \"#45062e\",\n    borderWidth : 2,\n    borderRadius: 20,\n    margin: 10,\n    width: \"30%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\",\n  },\n\n  TextInput: {\n    height: 50,\n    flex: 1,\n    textAlign: 'center',\n  },\n\n  buttonText: {\n    fontFamily: \"Times\",\n    fontWeight: \"bold\",\n    fontSize: 30,\n    color: \"#E5A4CB\",\n  },\n\n  forgot_button: {\n    height: 30,\n    paddingTop: 20,\n    marginBottom: 30,\n    alignItems: 'center',\n  },\n\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#45062e\",\n  },\n\n  nvm: {\n    width: \"30%\",\n    borderRadius: 25,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    backgroundColor: \"#45062e\",\n  },\n});\n","/home/trip/Desktop/gitless/frontend/src/auth.js",["132","133","134","135","136","137","138","139","140","141"],"import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Redirect, Switch, Link } from 'react-router-dom';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\nimport logo from './assets/QU3ST2.png';\nimport textStyling from './assets/textStyling.css';\n\n\nexport default function Auth() {\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  var cod = JSON.parse(localStorage.getItem('regi_info'));\n  console.log(cod);\n  var obj = { email: cod.email, code: \"\" }\n  const setCode = (code) => {\n    obj.code = code;\n  }\n\n  const doRegister = async event => {\n    console.log(obj)\n    //event.preventDefault();\n    // FIXME: Pull Login And Password From Our Fields\n    var js = JSON.stringify(obj);\n    try {\n      //https\n      const response = await fetch('https://quest-task.herokuapp.com/api/confirm',\n        { method: 'POST', body: js, headers: { 'Content-Type': 'application/json'}});\n\n      var res = JSON.parse(await response.text());\n      //console.log(res);\n      if (res.error) {\n        console.log(\"Error\");\n        // TODO: Send User Error Message\n        console.log(res.error.message);\n        setErrorMessage(res.error.message);\n      }\n      else {\n        console.log(\"no error\");\n        console.log(res);\n        console.log(obj);\n        // This is where we will move to auth phase\n        window.location.href = '/..';\n      }\n    }\n    catch (e) {\n      alert(e.toString());\n      return;\n    }\n  };\n  const goHome = async event => {\n    window.location.href = '/..';\n  }\n   \n  return (\n    <View style={styles.wrap}>\n\n      <StatusBar style=\"auto\" />  \n\n      <View style={[styles.regBox, textStyling.bg]}>\n        <Image source={logo} style={{ width: 750, height: 300 }} />\n\n        <div className=\"regTitle\">Enter 6 Digit Code</div>\n\n        <View style={styles.inputView}>\n          <TextInput\n            style={styles.TextInput}\n            placeholder=\"6 Digit Code\"\n            placeholderTextColor=\"#003f5c\"\n            onChangeText={(code) => setCode(code)}\n          />\n        </View>\n\n\n\n        <TouchableOpacity onPress={() => doRegister()} style={styles.loginBtn}>\n          <Text style={styles.buttonText}>Embark!</Text>\n        </TouchableOpacity>\n\n        {errorMessage && (<p className=\"error\"> {errorMessage} </p>)}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  wrap: {\n    backgroundColor: \"#a6dee3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: \"1\",\n  },\n\n  regBox: {\n    align: \"center\",\n    backgroundColor: \"#FBE8B3\",\n    borderColor: \"#C92D2D\",\n    borderWidth: 3,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"90%\",\n    padding: \"10\",\n    width: \"60%\",\n    borderRadius: \"10%\",\n  },\n\n  image: {\n    marginBottom: 40,\n    width: 300,\n    height: 100,\n  },\n\n  inputView: {\n    backgroundColor: \"#E5A4CB\",\n    borderColor: \"#45062e\",\n    borderWidth: 2,\n    borderRadius: 20,\n    margin: 10,\n    width: \"30%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\",\n  },\n\n  TextInput: {\n    height: 50,\n    flex: 1,\n    textAlign: 'center',\n  },\n\n  buttonText: {\n    fontFamily: \"Times\",\n    fontWeight: \"bold\",\n    fontSize: 30,\n    color: \"#E5A4CB\",\n  },\n\n  forgot_button: {\n    height: 30,\n    paddingTop: 20,\n    marginBottom: 30,\n    alignItems: 'center',\n  },\n\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#45062e\",\n  },\n\n  nvm: {\n    width: \"30%\",\n    borderRadius: 25,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    backgroundColor: \"#45062e\",\n  },\n});\n","/home/trip/Desktop/gitless/frontend/src/dash.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import { StatusBar } from \"expo-status-bar\";\nimport { BrowserRouter as Router, Route, Routes, Redirect, Switch, Link, useParams } from 'react-router-dom';\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Button,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\nimport logo from './assets/QU3ST2.png';\nimport bg from './assets/background.png';\nimport Register from \"./register\";\nimport textStyling from './assets/textStyling.css';\nimport Dashboard from './components/Dashboard'\nimport Table from './table'\n\nexport default function Dash() {\n  //var obj = {email:\"\",password:\"\"}\\\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  var cod = JSON.parse(localStorage.getItem('user_data'));\n  var rod = JSON.parse(localStorage[\"mydatas\"]);\n  console.log(\"Renny\");\n  console.log(rod);\n  var index;\n  var curr_quest_id;\n  var token = cod.Token\n  var questName = '';\n  var description = '';\n\n  try\n  {\n    if(rod[0].id == null)\n    {\n      rod = [];\n    }\n  }\n  catch(e)\n  {\n    rod = [];\n  } \n\n  var questArr = [];\n\n   const columns = React.useMemo(\n    () => [\n          {\n            Header: \"Quest Title\",\n            accessor: \"name\"\n          },\n          {\n            Header: \"Description\",\n            accessor: \"description\"\n          }\n    ]\n  );\n \n  console.log(columns);\n\n  console.log(cod);\n  const doLogout = async event => \n  {\n    window.location.href = '/..';\n  }\n  const doAdd = async event => \n  {\n    window.location.href = '/add';\n  }\n\n  const getQuests = async event => \n  {\n    console.log(cod);\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var obj = {};\n      var js = JSON.stringify(obj);\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/listQuests',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json', 'Authorization': token}});\n\n          var res = JSON.parse(await response.text());\n          console.log(res);\n            if( res.error )\n            {\n              console.log(\"error getting quest id list\");\n              console.log(res.error)\n              setErrorMessage(res.error.message);\n            }\n            else\n            {\n                console.log(\"no error getting quest id list\");\n                var hen = res.quests;\n                //var quests = {FirstName:res.FirstName,LastName:res.LastName, Token:res.Token}\n                //localStorage.setItem('quests', JSON.stringify(quests));\n                //console.log(user);\n                // TODO: Route To Dashboard Page And Send User Info\n                // window.location.href = '/';\n                // For Loop To View All Quest IDs\n\n                questArr = [];\n                for (let i = 0; i < hen.length; i++) \n                {\n                  curr_quest_id = hen[i];\n                  index = i;\n                  viewQuests();\n                }\n                console.log('Quest Array Right Here:');\n                localStorage.setItem('quest_data', JSON.stringify(questArr));\n                console.log(questArr);\n                console.log(localStorage.getItem('quest_data'))\n                  // curr_quest_id = questID[i]\n                  // index = i\n                  // viewQuest (within this we set  = return value)\n            }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n  \n  const viewQuests = async event => \n  {\n    console.log(cod);\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var obj = {id:curr_quest_id};\n      var js = JSON.stringify(obj);\n      console.log(\"View View\");\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/viewQuest',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json', 'Authorization': token}});\n\n          var res = JSON.parse(await response.text());\n          console.log(res);\n            if( res.error )\n            {\n              console.log(\"error reading quests\");\n              console.log(res.error)\n              setErrorMessage(res.error.message);\n            }\n            else\n            {\n                console.log(\"no error reading quests\");\n                console.log(res.quest);\n                var quests = {\n                  name:res.quest.name,\n                  description:res.quest.description, \n                  id:res.quest._id\n                };\n                localStorage.setItem('quest_reee', JSON.stringify(quests));\n                console.log(\"Look at me!\");\n                console.log(JSON.parse(localStorage.getItem('quest_reee')));\n                questArr.push(quests);\n                questName = res.quest.name;\n                description=res.quest.description;\n                console.log(questName);\n                console.log(description);\n                console.log(questArr);\n\n                localStorage[\"mydatas\"] = JSON.stringify(questArr);\n\n                console.log(JSON.parse(localStorage[\"mydatas\"])); \n                console.log(JSON.parse(localStorage[\"mydatas\"])[0].id); \n                localStorage[\"First_Adress\"] = JSON.stringify(JSON.parse(localStorage[\"mydatas\"])[0].id)\n\n                //localStorage.setItem('quests', JSON.stringify(quests));\n                //console.log(user);\n                // TODO: Route To Dashboard Page And Send User Info\n                // window.location.href = '/';\n            }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n\n  function doRefresh()\n  {\n    getQuests();\n\n    window.location.reload(false);\n  } \n  \n  const doDelete = async event => \n  {\n    console.log(cod);\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var obj = {id : JSON.parse(localStorage[\"First_Adress\"])};\n      console.log(obj);\n      var js = JSON.stringify(obj);\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/deleteQuest',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json', 'Authorization': token}});\n          var res = JSON.parse(await response.text());\n          console.log(res);\n            if( res.error )\n            {\n              console.log(\"error getting quest id list\");\n              console.log(res.error)\n              setErrorMessage(res.error.message);\n            }\n            else\n            {\n                console.log(\"no error getting quest id list\");\n                var hen = res.quests;\n                //var quests = {FirstName:res.FirstName,LastName:res.LastName, Token:res.Token}\n                //localStorage.setItem('quests', JSON.stringify(quests));\n                //console.log(user);\n                // TODO: Route To Dashboard Page And Send User Info\n                // window.location.href = '/';\n                // For Loop To View All Quest IDs\n\n                questArr = [];\n                for (let i = 0; i < hen.length; i++) \n                {\n                  curr_quest_id = hen[i];\n                  index = i;\n                  viewQuests();\n                }\n                console.log('Quest Array Right Here:');\n                localStorage.setItem('quest_data', JSON.stringify(questArr));\n                console.log(questArr);\n                console.log(localStorage.getItem('quest_data'))\n                  // curr_quest_id = questID[i]\n                  // index = i\n                  // viewQuest (within this we set  = return value)\n            }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n  // const viewTable = (\n  //   <View>\n  //     <Table questName={questName} description={description} />\n  //   </View>\n  // )\n\n\n\n    function ShowDashboard() {\n      var obj = {id:curr_quest_id};\n      const [title, setTitle] = useState([])\n      const [description, setDescription] = useState([])\n      const [quest, setQuest] = useState([])\n      const {quest_id} =useParams()\n\n      \n      const listView = (\n        <Dashboard\n          title={quest.title}\n          description={quest.description}\n          />\n      )\n\n    }\n\n\n\n\n   return (\n\n    \n\n    <View style={styles.wrap}>\n      <ImageBackground source={bg} style={{width: '100%', height: '100%', alignItems: 'center'}}>\n\n      <View style={styles.menuWrap}>\n      <StatusBar style=\"auto\" />\n      <div className=\"regTitle\">Welcome Hero!</div>\n      <TouchableOpacity onPress = {() => doLogout()} style={[styles.registerBtn, styles.shadowProp]}>\n        <Text style={styles.loginText}>Logout</Text>\n      </TouchableOpacity>\n\n\n      <TouchableOpacity onPress = {() => doAdd()} style={[styles.registerBtn, styles.shadowProp]}>\n        <Text style={styles.loginText}>Add Quest</Text>\n      </TouchableOpacity>\n      <div className=\"regTitle\">Quest Log</div>\n\n      <View>\n        <Table columns={columns} data={rod} />\n      </View>\n      \n     \n      {/* <Dashboard /> */}\n      {/* {ShowDashboard} */}\n      {/* <Table columns={quests.questName} data={quests.description} /> */}\n      \n      \n\n      <TouchableOpacity onPress = {() => getQuests()} style={[styles.registerBtn, styles.shadowProp]}>\n        <Text style={styles.loginText}>Refresh</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity /*onPress = {() => doEdit()}*/ style={[styles.registerBtn, styles.shadowProp]}>\n        <Text style={styles.loginText}>Edit</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress = {() => doDelete()} style={[styles.registerBtn, styles.shadowProp]}>\n        <Text style={styles.loginText}>Complete</Text>\n      </TouchableOpacity>\n      \n      {errorMessage && (<p className=\"error\"> {errorMessage} </p>)}\n    </View>\n    </ImageBackground>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  menuWrap:{\n    backgroundColor: \"#FBE8B3\",\n    marginTop: 30,\n    borderRadius: 25,\n    width: 800,\n    height: \"90%\",\n    alignItems: \"center\",\n    borderColor : \"#C92D2D\",\n    borderWidth: 4,\n    overflow: \"hidden\",\n  },\n\n  wrap:{\n    align: \"center\",\n    backgroundColor:\"#a6dee3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: \"1\",\n  },\n\n  image: {\n    marginTop: -10,\n    marginBottom: 20,\n    width: 300,\n    height: 100,\n  },\n\n  inputView: {\n    backgroundColor: \"#A1869E\",\n    borderRadius: 30,\n    width: \"30%\",\n    height: 40,\n    marginBottom: 14,\n    alignItems: \"center\",\n  },\n\n  loginText:{\n    fontFamily: \"Garamond, serif\",\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n\n  TextInput: {\n    height: 50,\n    flex: 1,\n    textAlign: 'center',\n  },\n\n  forgot_button: {\n    height: 30,\n    paddingTop: 10,\n    marginBottom: 10,\n    alignItems: 'center',\n    fontFamily: \"Garamond, serif\",\n    fontSize: 14,\n    fontWeight: \"bolder\",\n    marginTop: -10,\n    marginBottom: 10,\n    padding: 20,\n  },\n\n  shadowProp: {\n    shadowColor: '#171717',\n    shadowOffset: {width: -2, height: 4},\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n  },\n\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#797596\",\n  },\n\n  registerBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#797596\",\n  },\n});","/home/trip/Desktop/gitless/frontend/src/add.js",["168","169","170","171","172","173","174","175","176","177","178","179"],"import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Redirect, Switch, Link } from 'react-router-dom';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\nimport logo from './assets/QU3ST2.png';\nimport textStyling from './assets/textStyling.css';\n\nlet questArr = [];\nlet curr_quest_id = \"\";\nlet questName = \"\";\nlet description = \"\";\nlet index = 0;\n\nexport default function Add() {\n\n  const getQuests = async event => \n  {\n    console.log(cod);\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var obj = {};\n      var js = JSON.stringify(obj);\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/listQuests',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json', 'Authorization': token}});\n\n          var res = JSON.parse(await response.text());\n          console.log(res);\n            if( res.error )\n            {\n              console.log(\"error getting quest id list\");\n              console.log(res.error)\n              setErrorMessage(res.error.message);\n            }\n            else\n            {\n                console.log(\"no error getting quest id list\");\n                var hen = res.quests;\n                //var quests = {FirstName:res.FirstName,LastName:res.LastName, Token:res.Token}\n                //localStorage.setItem('quests', JSON.stringify(quests));\n                //console.log(user);\n                // TODO: Route To Dashboard Page And Send User Info\n                // window.location.href = '/';\n                // For Loop To View All Quest IDs\n\n                questArr = [];\n                for (let i = 0; i < hen.length; i++) \n                {\n                  curr_quest_id = hen[i];\n                  index = i;\n                  viewQuests();\n                }\n                console.log('Quest Array Right Here:');\n                localStorage.setItem('quest_data', JSON.stringify(questArr));\n                console.log(questArr);\n                console.log(localStorage.getItem('quest_data'))\n                  // curr_quest_id = questID[i]\n                  // index = i\n                  // viewQuest (within this we set  = return value)\n            }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n  \n  const viewQuests = async event => \n  {\n    console.log(cod);\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var obj = {id:curr_quest_id};\n      var js = JSON.stringify(obj);\n      console.log(\"View View\");\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/viewQuest',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json', 'Authorization': token}});\n\n          var res = JSON.parse(await response.text());\n          console.log(res);\n            if( res.error )\n            {\n              console.log(\"error reading quests\");\n              console.log(res.error)\n              setErrorMessage(res.error.message);\n            }\n            else\n            {\n                console.log(\"no error reading quests\");\n                console.log(res.quest);\n                var quests = {\n                  name:res.quest.name,\n                  description:res.quest.description, \n                  id:res.quest._id\n                };\n                localStorage.setItem('quest_reee', JSON.stringify(quests));\n                console.log(\"Look at me!\");\n                console.log(JSON.parse(localStorage.getItem('quest_reee')));\n                questArr.push(quests);\n                questName = res.quest.name;\n                description=res.quest.description;\n                console.log(questName);\n                console.log(description);\n                console.log(questArr);\n\n                localStorage[\"mydatas\"] = JSON.stringify(questArr);\n\n                console.log(JSON.parse(localStorage[\"mydatas\"])); \n                console.log(JSON.parse(localStorage[\"mydatas\"])[0].id); \n                localStorage[\"First_Adress\"] = JSON.stringify(JSON.parse(localStorage[\"mydatas\"])[0].id)\n\n                //localStorage.setItem('quests', JSON.stringify(quests));\n                //console.log(user);\n                // TODO: Route To Dashboard Page And Send User Info\n                // window.location.href = '/';\n            }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n\n\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  var obj = {name:\"\",description:\"\",urgency:\"No\", xPtotal:\"0\", due:\"2021-11-05\", isFinished:\"0\"}\n  var cod = JSON.parse(localStorage.getItem('user_data'));\n  var token = cod.Token\n  const setname = (name) => {\n    obj.name = name;\n  }\n  const setdescription = (description) => {\n    obj.description = description;\n  }\n  const setdue = (due) => {\n    obj.due = due;\n  }\n  const doAdd = async event => \n  {\n      console.log(obj)\n      //event.preventDefault();\n      // FIXME: Pull Login And Password From Our Fields\n      var js = JSON.stringify(obj);\n      try\n      {    \n          //\n          const response = await fetch('https://quest-task.herokuapp.com/api/createQuest',\n              {method:'POST',body:js,headers:{'Content-Type': 'application/json', 'Authorization': token}});\n\n          var res = JSON.parse(await response.text());\n          //console.log(res);\n          if( res.error )\n          {\n              // TODO: Send User Error Message\n              console.log(res.error.message);\n              setErrorMessage(res.error.message);\n          }\n          else\n          {\n              console.log(\"no error\");\n              console.log(res);\n              //localStorage.setItem('regi_info', JSON.stringify(obj));\n              console.log(obj);\n              // This is where we will move to auth phase\n              \n              \n              getQuests();\n\n              console.log(questArr);\n\n              //window.location.href = '/dash';\n          }\n      }\n      catch(e)\n      {\n          alert(e.toString());\n          return;\n      }    \n  };\n  const goHome = async event => \n  {\n    getQuests();\n\n    console.log(questArr);\n\n    window.location.href = '/dash';\n  }\n  return (\n    <View style={styles.wrap}>\n    \n      <StatusBar style=\"auto\" />\n\n      <View style={[styles.regBox, textStyling.bg]}>\n      \n\n      <div className=\"regTitle\">Hello adventurer...</div>\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Quest Title\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(name) => setname(name)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Quest Description\"\n          placeholderTextColor=\"#003f5c\"\n          \n          onChangeText={(description) => setdescription(description)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Due Date\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(due) => setdue(due)}\n        />\n      </View>\n\n      <TouchableOpacity onPress = {() => doAdd()} style={styles.loginBtn}> \n        <Text style={styles.buttonText}>Accept Quest</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity onPress = {() => goHome()} style={styles.nvm}>\n        <Text style={styles.buttonText}>Return</Text>\n      </TouchableOpacity>\n      {errorMessage && (<p className=\"error\"> {errorMessage} </p>)}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  wrap:{\n    backgroundColor:\"#a6dee3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: \"1\",\n  },\n\n  regBox:{\n    align: \"center\",\n    backgroundColor: \"#FBE8B3\",\n    borderColor : \"#C92D2D\",\n    borderWidth : 3,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"90%\",\n    padding: \"10\",\n    width: \"60%\",\n    borderRadius: \"10%\",\n  },\n\n  image: {\n    marginBottom: 40,\n    width: 300,\n    height: 100,\n  },\n\n  inputView: {\n    backgroundColor: \"#E5A4CB\",\n    borderColor : \"#45062e\",\n    borderWidth : 2,\n    borderRadius: 20,\n    margin: 10,\n    width: \"30%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\",\n  },\n\n  TextInput: {\n    height: 50,\n    flex: 1,\n    textAlign: 'center',\n  },\n\n  buttonText: {\n    fontFamily: \"Times\",\n    fontWeight: \"bold\",\n    fontSize: 30,\n    color: \"#E5A4CB\",\n  },\n\n  forgot_button: {\n    height: 30,\n    paddingTop: 20,\n    marginBottom: 30,\n    alignItems: 'center',\n  },\n\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#45062e\",\n  },\n\n  nvm: {\n    width: \"30%\",\n    borderRadius: 25,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    backgroundColor: \"#45062e\",\n },\n});","/home/trip/Desktop/gitless/frontend/src/table.js",["180","181","182"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useRowSelect } from \"react-table\";\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n \n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows,\n    state: { selectedRowIds }\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useRowSelect,\n    (hooks) => {\n      hooks.visibleColumns.push((columns) => [\n        // Let's make a column for selection\n        {\n          id: \"selection\",\n          // The header can use the table's getToggleAllRowsSelectedProps method\n          // to render a checkbox\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <div>\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n            </div>\n          ),\n          // The cell can use the individual row's getToggleRowSelectedProps method\n          // to the render a checkbox\n          Cell: ({ row }) => (\n            <div>\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n            </div>\n          )\n        },\n        ...columns\n      ]);\n    }\n  );\n\n  // Render the UI for your table\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.slice(0, 10).map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {/* <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n      <pre>\n        <code>\n          {JSON.stringify(\n            {\n              selectedRowIds: selectedRowIds,\n              \"selectedFlatRows[].original\": selectedFlatRows.map(\n                (d) => d.original\n              )\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre> */}\n    </>\n  );\n}\n\n\nexport default Table;\n","/home/trip/Desktop/gitless/frontend/src/components/Dashboard.js",["183","184","185","186","187","188","189","190","191","192","193"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Card, ListGroup } from 'react-bootstrap';\r\nimport {ImageBackground, View, StyleSheet, TextInput, Text} from 'react-native';\r\n//import axios from 'axios';\r\n//import bg from './../assets/background.png'\r\n//import Task from './Task';\r\n//import FilterButtons from './FilterButtons';\r\n//import NewTaskForm from './NewTaskForm';\r\n//import ButtonIcons from './ButtonIcons';\r\n//import DeleteConfirmation from './DeleteConfirmation';\r\n//import path from './Path.js'\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n//import Grid from \"@material-ui/core/Grid\";\r\n//import Checkbox from \"@material-ui/core/Checkbox\";\r\n//import TaskList from './TaskList'\r\n\r\n\r\n\r\n    function NotDash(props) {\r\n\r\n      /*  var obj = {name:\"To the Store\",date:\"12/14/21\",description:\"I need to get milk\",urgency:\"High\"} dummy */\r\n      var obj = {name : props.name, date: props.date, description: props.date, urgency: props.urgency};\r\n\r\n      var questList = [...{fields: props.description, label: props.name}]\r\n\r\n      const exampleList = [\r\n  {\r\n    label: \"FormGroup-0\",\r\n    content:\r\n      \"FormGroup-0 FormGroup-0 FormGroup-0FormGroup-0 FormGroup-0 FormGroup-0\",\r\n    fields: [\r\n      {\r\n        el: \"input\",\r\n        type: \"text\",\r\n        id: \"pension-disability\",\r\n        label: \"Pension/Disability\",\r\n        placeholder: \"Pension/Disability\",\r\n        value: \"\",\r\n        name: \"pension-disability\",\r\n        validation: \"currency\",\r\n        useValue: true,\r\n        charLimit: 6\r\n      },\r\n      {\r\n        el: \"input\",\r\n        type: \"text\",\r\n        id: \"testing\",\r\n        label: \"Testing\",\r\n        placeholder: \"Testing\",\r\n        value: \"\",\r\n        name: \"testing\",\r\n        validation: \"currency\",\r\n        useValue: true,\r\n        charLimit: 6\r\n      }\r\n    ]}];\r\n\r\n\r\n      return(\r\n\r\n      <View>\r\n        <Accordion >\r\n         {exampleList.map((item, index) => (\r\n           <AccordionSummary index={index} activeTab={1} isCollapsible expandIcon={<ExpandMoreIcon />}>             \r\n               {item.label}\r\n             <AccordionDetails>\r\n               <Text>\r\n               <p>{item.content}</p>\r\n                {item.fields && item.fields.map(() => <div>Field</div>)}\r\n                </Text>\r\n             </AccordionDetails>\r\n             </AccordionSummary>\r\n         ))}\r\n      </Accordion>\r\n    </View>\r\n\r\n        );\r\n      \r\n      }\r\n      \r\n      export default NotDash;\r\n\r\n      const styles = StyleSheet.create({\r\n\r\n        questTitle: {\r\n            fontFamily: \"Garamond, serif\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          },\r\n\r\n\r\n      });\r\n\r\n      //   <View>\r\n    //     <Accordion>\r\n    //      <AccordionSummary style = { {backgroundColor: \"#BCA3AC\", width: 750, borderRadius: 5}}>\r\n    //       <Text style = {styles.questTitle}>{obj.name}</Text>\r\n    //       <Text> Due Date - {obj.date} </Text>\r\n    //     </AccordionSummary>\r\n    //     <AccordionDetails>\r\n    //       <Text>\r\n    //         {obj.description}\r\n    //       </Text>\r\n    //       <Text>\r\n    //         {obj.urgency}\r\n    //       </Text>\r\n        \r\n    //     <Button> Edit </Button>\r\n    //     <Button> Delete </Button>\r\n\r\n    //     </AccordionDetails>\r\n    //   </Accordion>\r\n    // </View>","/home/trip/Desktop/gitless/frontend/src/components/Path.js",["194"],"const hostname = 'quest-task.herokuapp.com';\n\nfunction buildPath(route) {\n    if (process.env.NODE_ENV === \"production\") {\n        return `https://${hostname}/${route}`;\n    }   \n\n    return `http://localhost:19006/${route}`;\n}\n\nexport default {\n    buildPath: buildPath\n}",["195","196"],"/home/trip/Desktop/gitless/frontend/src/components/FilterButtons.js",[],"/home/trip/Desktop/gitless/frontend/src/components/Task.js",[],"/home/trip/Desktop/gitless/frontend/src/components/NewTaskForm.js",[],"/home/trip/Desktop/gitless/frontend/src/components/DeleteConfirmation.js",[],"/home/trip/Desktop/gitless/frontend/src/components/ButtonIcons.js",[],"/home/trip/Desktop/gitless/frontend/src/components/TaskList.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"217","severity":1,"message":"221","line":2,"column":50,"nodeType":"219","messageId":"220","endLine":2,"endColumn":56},{"ruleId":"217","severity":1,"message":"222","line":2,"column":58,"nodeType":"219","messageId":"220","endLine":2,"endColumn":62},{"ruleId":"217","severity":1,"message":"223","line":3,"column":10,"nodeType":"219","messageId":"220","endLine":3,"endColumn":16},{"ruleId":"217","severity":1,"message":"224","line":15,"column":12,"nodeType":"219","messageId":"220","endLine":15,"endColumn":17},{"ruleId":"217","severity":1,"message":"225","line":15,"column":19,"nodeType":"219","messageId":"220","endLine":15,"endColumn":27},{"ruleId":"217","severity":1,"message":"226","line":2,"column":17,"nodeType":"219","messageId":"220","endLine":2,"endColumn":26},{"ruleId":"217","severity":1,"message":"227","line":5,"column":3,"nodeType":"219","messageId":"220","endLine":5,"endColumn":7},{"ruleId":"217","severity":1,"message":"228","line":8,"column":3,"nodeType":"219","messageId":"220","endLine":8,"endColumn":12},{"ruleId":"217","severity":1,"message":"229","line":9,"column":3,"nodeType":"219","messageId":"220","endLine":9,"endColumn":9},{"ruleId":"217","severity":1,"message":"230","line":11,"column":3,"nodeType":"219","messageId":"220","endLine":11,"endColumn":18},{"ruleId":"217","severity":1,"message":"231","line":13,"column":8,"nodeType":"219","messageId":"220","endLine":13,"endColumn":12},{"ruleId":"217","severity":1,"message":"232","line":14,"column":8,"nodeType":"219","messageId":"220","endLine":14,"endColumn":10},{"ruleId":"217","severity":1,"message":"233","line":15,"column":8,"nodeType":"219","messageId":"220","endLine":15,"endColumn":13},{"ruleId":"217","severity":1,"message":"234","line":16,"column":8,"nodeType":"219","messageId":"220","endLine":16,"endColumn":11},{"ruleId":"217","severity":1,"message":"235","line":17,"column":8,"nodeType":"219","messageId":"220","endLine":17,"endColumn":12},{"ruleId":"217","severity":1,"message":"236","line":18,"column":8,"nodeType":"219","messageId":"220","endLine":18,"endColumn":14},{"ruleId":"217","severity":1,"message":"237","line":19,"column":8,"nodeType":"219","messageId":"220","endLine":19,"endColumn":19},{"ruleId":"217","severity":1,"message":"238","line":20,"column":27,"nodeType":"219","messageId":"220","endLine":20,"endColumn":33},{"ruleId":"217","severity":1,"message":"239","line":20,"column":35,"nodeType":"219","messageId":"220","endLine":20,"endColumn":40},{"ruleId":"217","severity":1,"message":"240","line":20,"column":42,"nodeType":"219","messageId":"220","endLine":20,"endColumn":50},{"ruleId":"217","severity":1,"message":"221","line":20,"column":52,"nodeType":"219","messageId":"220","endLine":20,"endColumn":58},{"ruleId":"217","severity":1,"message":"238","line":2,"column":27,"nodeType":"219","messageId":"220","endLine":2,"endColumn":33},{"ruleId":"217","severity":1,"message":"239","line":2,"column":35,"nodeType":"219","messageId":"220","endLine":2,"endColumn":40},{"ruleId":"217","severity":1,"message":"241","line":2,"column":42,"nodeType":"219","messageId":"220","endLine":2,"endColumn":48},{"ruleId":"217","severity":1,"message":"240","line":2,"column":50,"nodeType":"219","messageId":"220","endLine":2,"endColumn":58},{"ruleId":"217","severity":1,"message":"221","line":2,"column":60,"nodeType":"219","messageId":"220","endLine":2,"endColumn":66},{"ruleId":"217","severity":1,"message":"222","line":2,"column":68,"nodeType":"219","messageId":"220","endLine":2,"endColumn":72},{"ruleId":"217","severity":1,"message":"229","line":10,"column":3,"nodeType":"219","messageId":"220","endLine":10,"endColumn":9},{"ruleId":"217","severity":1,"message":"242","line":16,"column":8,"nodeType":"219","messageId":"220","endLine":16,"endColumn":16},{"ruleId":"217","severity":1,"message":"237","line":17,"column":8,"nodeType":"219","messageId":"220","endLine":17,"endColumn":19},{"ruleId":"217","severity":1,"message":"243","line":27,"column":5,"nodeType":"219","messageId":"220","endLine":27,"endColumn":10},{"ruleId":"217","severity":1,"message":"224","line":201,"column":13,"nodeType":"219","messageId":"220","endLine":201,"endColumn":18},{"ruleId":"217","severity":1,"message":"225","line":201,"column":20,"nodeType":"219","messageId":"220","endLine":201,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":221,"column":18,"nodeType":"246","messageId":"247","endLine":221,"endColumn":30},{"ruleId":"248","severity":1,"message":"249","line":331,"column":5,"nodeType":"250","messageId":"251","endLine":331,"endColumn":17},{"ruleId":"217","severity":1,"message":"252","line":2,"column":17,"nodeType":"219","messageId":"220","endLine":2,"endColumn":25},{"ruleId":"217","severity":1,"message":"238","line":3,"column":27,"nodeType":"219","messageId":"220","endLine":3,"endColumn":33},{"ruleId":"217","severity":1,"message":"239","line":3,"column":35,"nodeType":"219","messageId":"220","endLine":3,"endColumn":40},{"ruleId":"217","severity":1,"message":"241","line":3,"column":42,"nodeType":"219","messageId":"220","endLine":3,"endColumn":48},{"ruleId":"217","severity":1,"message":"240","line":3,"column":50,"nodeType":"219","messageId":"220","endLine":3,"endColumn":58},{"ruleId":"217","severity":1,"message":"221","line":3,"column":60,"nodeType":"219","messageId":"220","endLine":3,"endColumn":66},{"ruleId":"217","severity":1,"message":"222","line":3,"column":68,"nodeType":"219","messageId":"220","endLine":3,"endColumn":72},{"ruleId":"217","severity":1,"message":"229","line":10,"column":3,"nodeType":"219","messageId":"220","endLine":10,"endColumn":9},{"ruleId":"244","severity":1,"message":"245","line":78,"column":18,"nodeType":"246","messageId":"247","endLine":78,"endColumn":30},{"ruleId":"217","severity":1,"message":"252","line":2,"column":17,"nodeType":"219","messageId":"220","endLine":2,"endColumn":25},{"ruleId":"217","severity":1,"message":"238","line":3,"column":27,"nodeType":"219","messageId":"220","endLine":3,"endColumn":33},{"ruleId":"217","severity":1,"message":"239","line":3,"column":35,"nodeType":"219","messageId":"220","endLine":3,"endColumn":40},{"ruleId":"217","severity":1,"message":"241","line":3,"column":42,"nodeType":"219","messageId":"220","endLine":3,"endColumn":48},{"ruleId":"217","severity":1,"message":"240","line":3,"column":50,"nodeType":"219","messageId":"220","endLine":3,"endColumn":58},{"ruleId":"217","severity":1,"message":"221","line":3,"column":60,"nodeType":"219","messageId":"220","endLine":3,"endColumn":66},{"ruleId":"217","severity":1,"message":"222","line":3,"column":68,"nodeType":"219","messageId":"220","endLine":3,"endColumn":72},{"ruleId":"217","severity":1,"message":"229","line":10,"column":3,"nodeType":"219","messageId":"220","endLine":10,"endColumn":9},{"ruleId":"217","severity":1,"message":"253","line":57,"column":9,"nodeType":"219","messageId":"220","endLine":57,"endColumn":15},{"ruleId":"244","severity":1,"message":"245","line":64,"column":18,"nodeType":"246","messageId":"247","endLine":64,"endColumn":30},{"ruleId":"217","severity":1,"message":"238","line":2,"column":27,"nodeType":"219","messageId":"220","endLine":2,"endColumn":33},{"ruleId":"217","severity":1,"message":"239","line":2,"column":35,"nodeType":"219","messageId":"220","endLine":2,"endColumn":40},{"ruleId":"217","severity":1,"message":"241","line":2,"column":42,"nodeType":"219","messageId":"220","endLine":2,"endColumn":48},{"ruleId":"217","severity":1,"message":"240","line":2,"column":50,"nodeType":"219","messageId":"220","endLine":2,"endColumn":58},{"ruleId":"217","severity":1,"message":"221","line":2,"column":60,"nodeType":"219","messageId":"220","endLine":2,"endColumn":66},{"ruleId":"217","severity":1,"message":"222","line":2,"column":68,"nodeType":"219","messageId":"220","endLine":2,"endColumn":72},{"ruleId":"217","severity":1,"message":"254","line":8,"column":3,"nodeType":"219","messageId":"220","endLine":8,"endColumn":8},{"ruleId":"217","severity":1,"message":"228","line":9,"column":3,"nodeType":"219","messageId":"220","endLine":9,"endColumn":12},{"ruleId":"217","severity":1,"message":"229","line":10,"column":3,"nodeType":"219","messageId":"220","endLine":10,"endColumn":9},{"ruleId":"217","severity":1,"message":"231","line":14,"column":8,"nodeType":"219","messageId":"220","endLine":14,"endColumn":12},{"ruleId":"217","severity":1,"message":"242","line":16,"column":8,"nodeType":"219","messageId":"220","endLine":16,"endColumn":16},{"ruleId":"217","severity":1,"message":"237","line":17,"column":8,"nodeType":"219","messageId":"220","endLine":17,"endColumn":19},{"ruleId":"217","severity":1,"message":"243","line":28,"column":7,"nodeType":"219","messageId":"220","endLine":28,"endColumn":12},{"ruleId":"255","severity":1,"message":"256","line":48,"column":20,"nodeType":"257","endLine":48,"endColumn":33},{"ruleId":"217","severity":1,"message":"258","line":188,"column":12,"nodeType":"219","messageId":"220","endLine":188,"endColumn":21},{"ruleId":"217","severity":1,"message":"259","line":257,"column":14,"nodeType":"219","messageId":"220","endLine":257,"endColumn":27},{"ruleId":"217","severity":1,"message":"260","line":258,"column":11,"nodeType":"219","messageId":"220","endLine":258,"endColumn":14},{"ruleId":"217","severity":1,"message":"261","line":259,"column":14,"nodeType":"219","messageId":"220","endLine":259,"endColumn":19},{"ruleId":"217","severity":1,"message":"262","line":259,"column":21,"nodeType":"219","messageId":"220","endLine":259,"endColumn":29},{"ruleId":"217","severity":1,"message":"263","line":260,"column":14,"nodeType":"219","messageId":"220","endLine":260,"endColumn":25},{"ruleId":"217","severity":1,"message":"264","line":260,"column":27,"nodeType":"219","messageId":"220","endLine":260,"endColumn":41},{"ruleId":"217","severity":1,"message":"265","line":261,"column":21,"nodeType":"219","messageId":"220","endLine":261,"endColumn":29},{"ruleId":"217","severity":1,"message":"266","line":262,"column":14,"nodeType":"219","messageId":"220","endLine":262,"endColumn":22},{"ruleId":"217","severity":1,"message":"267","line":265,"column":13,"nodeType":"219","messageId":"220","endLine":265,"endColumn":21},{"ruleId":"244","severity":1,"message":"245","line":285,"column":18,"nodeType":"246","messageId":"247","endLine":285,"endColumn":30},{"ruleId":"248","severity":1,"message":"249","line":392,"column":5,"nodeType":"250","messageId":"251","endLine":392,"endColumn":17},{"ruleId":"217","severity":1,"message":"252","line":2,"column":17,"nodeType":"219","messageId":"220","endLine":2,"endColumn":25},{"ruleId":"217","severity":1,"message":"238","line":3,"column":27,"nodeType":"219","messageId":"220","endLine":3,"endColumn":33},{"ruleId":"217","severity":1,"message":"239","line":3,"column":35,"nodeType":"219","messageId":"220","endLine":3,"endColumn":40},{"ruleId":"217","severity":1,"message":"241","line":3,"column":42,"nodeType":"219","messageId":"220","endLine":3,"endColumn":48},{"ruleId":"217","severity":1,"message":"240","line":3,"column":50,"nodeType":"219","messageId":"220","endLine":3,"endColumn":58},{"ruleId":"217","severity":1,"message":"221","line":3,"column":60,"nodeType":"219","messageId":"220","endLine":3,"endColumn":66},{"ruleId":"217","severity":1,"message":"222","line":3,"column":68,"nodeType":"219","messageId":"220","endLine":3,"endColumn":72},{"ruleId":"217","severity":1,"message":"254","line":8,"column":3,"nodeType":"219","messageId":"220","endLine":8,"endColumn":8},{"ruleId":"217","severity":1,"message":"229","line":10,"column":3,"nodeType":"219","messageId":"220","endLine":10,"endColumn":9},{"ruleId":"217","severity":1,"message":"231","line":13,"column":8,"nodeType":"219","messageId":"220","endLine":13,"endColumn":12},{"ruleId":"217","severity":1,"message":"243","line":20,"column":5,"nodeType":"219","messageId":"220","endLine":20,"endColumn":10},{"ruleId":"244","severity":1,"message":"245","line":206,"column":18,"nodeType":"246","messageId":"247","endLine":206,"endColumn":30},{"ruleId":"217","severity":1,"message":"268","line":6,"column":7,"nodeType":"219","messageId":"220","endLine":6,"endColumn":13},{"ruleId":"217","severity":1,"message":"269","line":62,"column":5,"nodeType":"219","messageId":"220","endLine":62,"endColumn":21},{"ruleId":"217","severity":1,"message":"270","line":63,"column":14,"nodeType":"219","messageId":"220","endLine":63,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"271","line":1,"column":28,"nodeType":"219","messageId":"220","endLine":1,"endColumn":34},{"ruleId":"217","severity":1,"message":"252","line":1,"column":36,"nodeType":"219","messageId":"220","endLine":1,"endColumn":44},{"ruleId":"217","severity":1,"message":"229","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":16},{"ruleId":"217","severity":1,"message":"272","line":2,"column":18,"nodeType":"219","messageId":"220","endLine":2,"endColumn":22},{"ruleId":"217","severity":1,"message":"273","line":2,"column":24,"nodeType":"219","messageId":"220","endLine":2,"endColumn":33},{"ruleId":"217","severity":1,"message":"230","line":3,"column":9,"nodeType":"219","messageId":"220","endLine":3,"endColumn":24},{"ruleId":"217","severity":1,"message":"228","line":3,"column":44,"nodeType":"219","messageId":"220","endLine":3,"endColumn":53},{"ruleId":"217","severity":1,"message":"260","line":25,"column":11,"nodeType":"219","messageId":"220","endLine":25,"endColumn":14},{"ruleId":"217","severity":1,"message":"274","line":27,"column":11,"nodeType":"219","messageId":"220","endLine":27,"endColumn":20},{"ruleId":"217","severity":1,"message":"275","line":86,"column":13,"nodeType":"219","messageId":"220","endLine":86,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":11,"column":1,"nodeType":"278","endLine":13,"endColumn":2},{"ruleId":"213","replacedBy":"279"},{"ruleId":"215","replacedBy":"280"},{"ruleId":"217","severity":1,"message":"230","line":3,"column":9,"nodeType":"219","messageId":"220","endLine":3,"endColumn":24},{"ruleId":"217","severity":1,"message":"228","line":3,"column":44,"nodeType":"219","messageId":"220","endLine":3,"endColumn":53},{"ruleId":"217","severity":1,"message":"232","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":10},{"ruleId":"248","severity":1,"message":"281","line":126,"column":17,"nodeType":"250","messageId":"251","endLine":126,"endColumn":21},{"ruleId":"282","severity":2,"message":"283","line":126,"column":23,"nodeType":"219","messageId":"284","endLine":126,"endColumn":27},{"ruleId":"248","severity":1,"message":"281","line":127,"column":17,"nodeType":"250","messageId":"251","endLine":127,"endColumn":21},{"ruleId":"282","severity":2,"message":"285","line":127,"column":23,"nodeType":"219","messageId":"284","endLine":127,"endColumn":30},{"ruleId":"248","severity":1,"message":"281","line":128,"column":17,"nodeType":"250","messageId":"251","endLine":128,"endColumn":21},{"ruleId":"282","severity":2,"message":"286","line":128,"column":23,"nodeType":"219","messageId":"284","endLine":128,"endColumn":34},{"ruleId":"282","severity":2,"message":"287","line":133,"column":37,"nodeType":"219","messageId":"284","endLine":133,"endColumn":40},{"ruleId":"282","severity":2,"message":"288","line":142,"column":48,"nodeType":"219","messageId":"284","endLine":142,"endColumn":53},{"ruleId":"282","severity":2,"message":"287","line":149,"column":37,"nodeType":"219","messageId":"284","endLine":149,"endColumn":40},{"ruleId":"282","severity":2,"message":"288","line":158,"column":48,"nodeType":"219","messageId":"284","endLine":158,"endColumn":53},{"ruleId":"289","severity":1,"message":"290","line":192,"column":19,"nodeType":"291","messageId":"251","endLine":192,"endColumn":21},{"ruleId":"217","severity":1,"message":"275","line":292,"column":7,"nodeType":"219","messageId":"220","endLine":292,"endColumn":13},{"ruleId":"248","severity":1,"message":"249","line":357,"column":5,"nodeType":"250","messageId":"251","endLine":357,"endColumn":17},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'render' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'Component' is defined but never used.","'Text' is defined but never used.","'TextInput' is defined but never used.","'Button' is defined but never used.","'ImageBackground' is defined but never used.","'logo' is defined but never used.","'bg' is defined but never used.","'dummy' is defined but never used.","'red' is defined but never used.","'blue' is defined but never used.","'yellow' is defined but never used.","'textStyling' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Routes' is defined but never used.","'Register' is defined but never used.","'index' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","no-dupe-keys","Duplicate key 'marginBottom'.","ObjectExpression","unexpected","'useState' is defined but never used.","'goHome' is assigned a value but never used.","'Image' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'doRefresh' is defined but never used.","'ShowDashboard' is defined but never used.","'obj' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setQuest' is assigned a value but never used.","'quest_id' is assigned a value but never used.","'listView' is assigned a value but never used.","'Styles' is assigned a value but never used.","'selectedFlatRows' is assigned a value but never used.","'selectedRowIds' is assigned a value but never used.","'useRef' is defined but never used.","'Card' is defined but never used.","'ListGroup' is defined but never used.","'questList' is assigned a value but never used.","'styles' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["292"],["293"],"Duplicate key 'text'.","no-undef","'date' is not defined.","undef","'urgency' is not defined.","'description' is not defined.","'obj' is not defined.","'token' is not defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]